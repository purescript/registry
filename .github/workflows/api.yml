# This workflow automates triggering operations of the registry API
name: Registry API

on:
  issues:
    # No 'edited' because new builds should be triggered by new comments.
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  api:
    # This condition is here because the issue_comment event is triggered
    # for pull requests as well, but we want to ignore those.
    if: ${{ !github.event.issue.pull_request }}

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.PACCHETTIBOTTI_TOKEN }}
      PACCHETTIBOTTI_TOKEN: ${{ secrets.PACCHETTIBOTTI_TOKEN }}
      SPACES_KEY: ${{ secrets.SPACES_KEY }}
      SPACES_SECRET: ${{ secrets.SPACES_SECRET }}

    steps:
      # Checks out the registry-dev repository so we can run scripts from it
      - name: Check out source repository
        uses: actions/checkout@v3
        with:
          repository: purescript/registry
          token: ${{ secrets.PACCHETTIBOTTI_TOKEN }}

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache PureScript dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-spago-${{ hashFiles('*.dhall') }}
          path: |
            .spago
            output

      - name: Install Nix
        uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ env.GITHUB_TOKEN }}

      - name: Install dependencies
        run: cd ci && nix develop --command 'registry-install'

      - name: Run the registry API
        run: cd ci && nix develop --command 'registry-api'
